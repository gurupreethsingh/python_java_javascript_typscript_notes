------------------------------------------------------------------------------
topic 1: Javascript variables
-------------------------------------------------------------------------------

        let a = 10;
        const b = 2.3;
        var c = 'a';
        console.log(c);
        d = "hello world";
        f = true;
        var c = 100;
        console.log(c);
        console.log(a);
        console.log(b);
        console.log(d);
        console.log(f);   

------------------------------------------------------------------------------
topic 2: Javascript Concatination and Relational operators
-------------------------------------------------------------------------------
	let a = 10;
	let b = 20;
	let c = "10";
	let d = 10;
	console.log(a+b);
	console.log("the sum of a and b is " + (a+b));
	console.log("the sum of a and b is " , (a+b));
	console.log("the sum of " + a +" and " + b + " is " + (a+b));
	console.log(a>b);
	console.log(a<b);
	console.log(a == d);
	console.log(a === d);
	console.log(a == c);  // no strict rules ( tries and converts string into integer)
	console.log(a === c);  //  very strict, check the datatype
    
------------------------------------------------------------------------------
topic 3 : varaibles declaration and initialization and printing.  
-------------------------------------------------------------------------------

    // let a = 100;
    // console.log(a);
    // var name = "shubham";
    // console.log(name);
    // var name = "Gurupreeth";
    // console.log(name);
    // a = 200; 
    // console.log(a);
    // const b = 300; 
    // console.log(b);
    // priting techniquies.
    // var name = "Shubham";
    // console.log("The name is " + name);
    // console.log("The name is " , name);
    // console.log(`The name is ${name}`);
    // console.log(`The name is ${name}`);

------------------------------------------------------------------------------
topic 4 : There are 6 conditional statments in JS
------------------------------------------------------------------------------
    // if
    // if- else
    // if -else if - else
    // switch - case 
    // break
    // continue

    var name = "Raj";

    if (name == "Shubham")
    {
        console.log("Access granted.");
    }

    else if (name == "Sham")
        {
            console.log("Access granted.");
        }

      else  if (name == "Raj")
          {
              console.log("Access granted.");
          }

        else   if (name == "Raju")
          {
              console.log("Access granted.");
          }

        else  if (name == "Ramesh")
          {
              console.log("Access granted.");
          }
      else{
        console.log("Access Denied");
      }

      // SWITCH - CASE statement 
      switch(name)
      {
        case "Shubham" : {console.log("Access granted"); break;  }
        case "Raj" : {console.log("Access granted"); break;  }
        case "Raju" : {console.log("Access granted"); break;  }
        case "Ramesh" : {console.log("Access granted"); break;  }
        case "Sham" : {console.log("Access granted"); break;  }
        default: { console.log("Access Denied");}
      }

      // BREAK statement. 
      for ( let i =1; i <= 10; i++)
      {
        console.log(i);
        if(i == 5)
        {
          break;
        }
      }

      // Continue Statement. 

      for( let i = 1; i<=10; i++)
      {
        if(i==5)
        {
          continue;
        }
        console.log(i);
      }

------------------------------------------------------------------------------
topic 5 : Functions in javascript
------------------------------------------------------------------------------
    // function declaration and execution.

    // 1. function without parameters.
    function add() {
      var a = 10;
      var b = 20;
      console.log(a + b);
    }

    // call the function by its name.
    add();

    // 2 : functions with parameters.
    function greet(name) {
      console.log(`hello ${name}`);
    }

    greet("ecoders");

    // 3. functions with default values.
    function greeting(name = "Ecoders") {
      console.log(`Hello ${name}`);
    }

    greeting();
    greeting("rajesh");

    // functions with return value.
    function subtract(a, b) {
      return a - b;
    }

    var result = subtract(30, 20);
    console.log(result);
    //or call the function directly inside the console.log()
    console.log(subtract(50, 25));

    // 4 varaible declaration of a function.
    var square = function (number) {
      return number * number;
    };

    console.log(square(5));

    // 5 : arrow functions.
    const addition = () => {
      var a = 20;
      var b = 30;
      console.log(a + b);
    };
    addition();

    // const greetToday = (name) => {
    //   console.log(`Hello ${name}`);
    // };
    // greetToday("ecoders");

    // writing arrow functions in one line, if the function has only one line of execution.
    const greetToday = (name) => `hello ${name}`;
    console.log(greetToday("ecoders"));

    // 5 iife functions ( Immediately Invoked Function Expression)
    (function () {
      console.log("Hello Ecoders");
    })();

    // 6: async function.
    async function fetchData() {
      return await fetch("http://localhost:3006/all-users");
    }

    // 7. callback functions :- function taking another function as the parameter.
    // map() function

    var numbers = [1, 2, 3, 14, 5, 6, 7, 8, 9, 10];

    const squares = numbers.map((eachnumber) => {
      return eachnumber * eachnumber;
    });

    console.log(squares);

    // filter() function.: filters only the elements you want.
    // fetch all even numbers from numbers.

    const even = numbers.filter((eachnumber) => {
      return eachnumber % 2 == 0;
    });

    console.log(even);

    const odd = numbers.filter((eachnumber) => {
      return eachnumber % 2 != 0;
    });

    console.log(odd);

    const seven_multiples = numbers.filter((eachnumber) => {
      return eachnumber % 7 == 0;
    });

    console.log(seven_multiples);

    // reduce() function
    // find the sum of all the numbers from 1 to 10.

    var nums = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

    const sumofnumbers = nums.reduce((sum, eachnumber) => {
      return sum + eachnumber;
    }, 0); //  0 here is the initial value of sum.

    console.log(sumofnumbers);

    // combine map + filter() + reduce() functions to solve one problem.
    // find the sum of squares of all the even numbers from 1 to 10 .

    var numbers = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10];

    // first find all the even nubers by usign the filter() function.
    // then square each of the even nubmer by using map() function.
    var result = numbers
      .filter((eachnumber) => eachnumber % 2 == 0)
      .map((eachnumber) => eachnumber * eachnumber)
      .reduce((sum, eachnumber) => sum + eachnumber, 0);

    console.log(result);

-------------------------------------------------------------------------------
topic 6 : recursive functions
-------------------------------------------------------------------------------
// recursive functions.
// find the factorial of a number using recurssion.
// normal way without recurssion.

var factorial = 1;

var n = 5;

for (let i = 1; i <= n; i++) {
  factorial = factorial * i;
}
console.log(`The factorial of ${n} is ${factorial}`);

// using recursion.

function findfactorial(number) {
  if (number == 1) {
    return 1;
  } else {
    return number * findfactorial(number - 1);
  }
}

console.log(`The factorial of ${n} is ${findfactorial(5)}`);